import numpy as np

from solutions.s0105_train_softmax_regression_with_gradient_descent import (
    train_softmaxreg,
)


def test_case_1():
    result = train_softmaxreg(
        np.array([[0.5, -1.2], [-0.3, 1.1], [0.8, -0.6]]), np.array([0, 1, 2]), 0.01, 10
    )

    assert np.allclose(
        result[0],
        np.array(
            [
                [-0.0011, 0.0145, -0.0921],
                [0.002, -0.0598, 0.1263],
                [-0.0009, 0.0453, -0.0342],
            ]
        ),
        atol=1e-4,
    )
    assert np.allclose(
        result[1],
        np.array(
            [
                3.2958,
                3.2611,
                3.2272,
                3.1941,
                3.1618,
                3.1302,
                3.0993,
                3.0692,
                3.0398,
                3.011,
            ]
        ),
        atol=1e-4,
    )


def test_case_2():
    result = train_softmaxreg(
        np.array(
            [
                [2.5257, 2.3333, 1.7730, 0.4106, -1.6648],
                [1.5101, 1.3023, 1.3198, 1.3608, 0.4638],
                [-2.0969, -1.3596, -1.0403, -2.2548, -0.3235],
                [-0.9666, -0.6068, -0.7201, -1.7325, -1.1281],
                [-0.3809, -0.2485, 0.1878, 0.5235, 1.3072],
                [0.5482, 0.3315, 0.1067, 0.3069, -0.3755],
                [-3.0339, -2.0196, -0.6546, -0.9033, 2.8918],
                [0.2860, -0.1265, -0.5220, 0.2830, -0.5865],
                [-0.2626, 0.7601, 1.8409, -0.2324, 1.8071],
                [0.3028, -0.4023, -1.2955, -0.1422, -1.7812],
            ]
        ),
        np.array([2, 3, 0, 0, 1, 3, 0, 1, 2, 1]),
        0.03,
        10,
    )

    assert np.allclose(
        result[0],
        np.array(
            [
                [-0.0841, -0.5693, -0.3651, -0.2423, -0.5344, 0.0339],
                [0.2566, 0.0535, -0.2103, -0.4004, 0.2709, -0.1461],
                [-0.1318, 0.211, 0.3998, 0.523, -0.1001, 0.0545],
                [-0.0407, 0.3049, 0.1757, 0.1197, 0.3637, 0.0576],
            ]
        ),
        atol=1e-4,
    )
    assert np.allclose(
        result[1],
        np.array(
            [
                13.8629,
                10.7202,
                9.3164,
                8.4943,
                7.9134,
                7.4599,
                7.0856,
                6.7655,
                6.4853,
                6.236,
            ]
        ),
        atol=1e-4,
    )
